; notification: The notification to display
; group-count: The number of notifications in its group.
(defwidget notification [notification ?is-group ?group-count ?show-count]
  (notification-hover :id {notification.id}
                      :appname {notification.appname}
                      :is-group {is-group ?: false}
    (box :class "notification notification-${notification.hints.urgency ?: "normal"}"
         :orientation "horizontal"
         :space-evenly false
         :spacing 10
         :halign "end"
         :width 380
         :height 80
         (box :class "notification-container"
              :orientation "vertical"
              :space-evenly false
              :hexpand true
              :vexpand true
              (eventbox :onclick {arraylength(notification.actions) == 0 ?
                                        "scripts/dbus-send --id ${notification.id}" :
                                        jq(notification.actions, `any(.[]; . == "default")`) ?
                                        "scripts/dbus-send --action ${notification.id} default" :
                                        "scripts/dbus-send --action ${notification.id} ${notification.actions[0]}"}
                        :onrightclick {jq(notification.actions, `any(.[]; . == "settings")`) ?
                                      "scripts/dbus-send --action ${notification.id} settings" : ""}
                        (box :orientation "vertical"
                             :space-evenly false
                             :hexpand true
                             :vexpand true
                             :spacing 10
                          (notification-header :icon {notification.icon}
                                               :appname {notification.appname}
                                               :timestamp {notification.timestamp})
                          (notification-content :notification notification)))
              (notification-actions :id {notification.id} :actions {notification.actions})
              (notification-group-expand-button :visible {show-count ?: false}
                                                :appname {notification.appname}
                                                :group-count {group-count ?: 1})))))

(defwidget notification-hover [id appname is-group]
  (eventbox :onhover "${EWW_CMD} update hover-notification='${id}'"
            :onhoverlost "${EWW_CMD} update hover-notification='null'"
            (overlay
              (box
                (children))
              (notification-dismiss-button :id {id}
                                           :appname appname
                                           :is-group is-group))))

(defwidget notification-dismiss-button [id appname ?is-group]
  (eventbox :class "notification-dismiss"
            :onclick {is-group ?
                      "scripts/dbus-send --group ${appname}" :
                      "scripts/dbus-send --id ${id}"}
            :visible {hover-notification == id}
            :cursor "pointer"
            :width 24
            :height 24
            :halign "start"
            :valign "start"
            (label :text "î©¶")))

(defwidget notification-header [icon appname timestamp]
  (box :class "notification-header"
       :space-evenly false
       (box :class "notification-appname"
            :halign "start"
            :hexpand true
            :space-evenly false
            :spacing 8
            (image :class "notification-icon"
                   :visible {icon != "null"}
                   :valign "start"
                   :image-width 16
                   :image-height 16
                   :path {icon})
            (label :show-truncated true
                   :xalign 0
                   :yalign 0
                   :wrap true
                   :text {appname}))
       (box :class "notification-time"
            :halign "end"
            :valign "start"
            (label :yalign 0
                   :text {timestamp}))))

(defwidget notification-content [notification]
  (box :class "notification-content"
       :orientation "horizontal"
       :vexpand true
       :space-evenly false
       :spacing 10
       (box :class "notification-text"
            :orientation "vertical"
            :space-evenly false
            :spacing 5
            :vexpand true
            :hexpand true
            (label :class "notification-summary"
                   :wrap true
                   :halign "start"
                   :xalign 0
                   :text {notification.summary})
            (label :class "notification-body"
                   :visible {notification.body != ""}
                   :markup {notification.body}
                   :halign "start"
                   :xalign 0
                   :wrap true))
       (image :class "notification-image"
              :visible {notification.hints.image-path != "null"}
              :image-width 64
              :valign "start"
              :path {notification.hints.image-path})))

(defwidget notification-actions [id actions]
  (box :orientation "horizontal"
       :space-evenly true
       :spacing 5
       ; Display butons for each action, except for the "default" action.
       ; Even index values represent the keys, and odd index values represent labels.
       (for action in {jq(actions, `[range(0; ${arraylength(actions) / 2}) as $i | ({"key": .[2*$i], "text": .[2*$i+1]}) | select(.key != "default" and .key != "settings")]`)}
            (box :class "notification-action-button-box"
              (eventbox :onclick "scripts/dbus-send --action ${id} ${action.key}"
                        :cursor "pointer"
                        :class "notification-action-button"
                        (label :text {action.text}))))))

(defwidget notification-group-expand-button [visible appname group-count]
  (box :class "notification-group-expand-button-box"
    (eventbox :onclick `scripts/reveal_notification_group "${appname}"`
              :cursor "pointer"
              :halign "start"
              :visible visible
              :class "notification-group-expand-button"
              (label :text "+${group-count - 1} more"
                     :justify "right"))))
