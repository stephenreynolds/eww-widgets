(include "yuck/app-menu.yuck")
(include "yuck/window-controls.yuck")
(include "yuck/system-stats.yuck")
(include "yuck/workspaces.yuck")
(include "yuck/indicators.yuck")
(include "yuck/clock.yuck")

(defwidget bar [monitor]
  (centerbox :orientation "h"
             :class "container ${(hyprland.monitors?.[monitor]?.single ?: false) ? "maximized" : ""}"
       (left :monitor monitor)
       (center :monitor monitor)
       (right :monitor monitor)))

(defwidget left [monitor]
  (box :halign "start"
       :spacing 10
       :space-evenly false
       (app-menu :monitor monitor)
       (window-controls)
       (box :visible {monitor == primary_monitor}
            (system-stats :visible {monitor == primary_monitor}))))

(defwidget center [monitor]
  (box :halign "center"
       :spacing 10
       :space-evenly false
       (workspaces :monitor monitor)))

(defwidget right [monitor]
  (box :halign "end"
       :spacing 10
       :space-evenly false
       (box :visible {monitor == primary_monitor}
            :spacing 10
            (indicators))
       (clock :monitor monitor)))

(defwindow bar0
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "30px"
                      :anchor "top center")
  :stacking "fg"
  :exclusive true
  :namespace "eww"
  :class "bar"
  (bar :monitor 0))

(defwindow bar1
  :monitor 1
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "30px"
                      :anchor "top center")
  :stacking "fg"
  :exclusive true
  :namespace "eww"
  :class "bar"
  (bar :monitor 1))

(defwindow bar2
  :monitor 2
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "30px"
                      :anchor "top center")
  :stacking "fg"
  :exclusive true
  :namespace "eww"
  :class "bar"
  (bar :monitor 2))
